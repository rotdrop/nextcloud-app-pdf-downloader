{"version":3,"file":"js/chunks/src_files-tab_ts-0b0b922d1731fbbfa558.js","mappings":"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","sources":["webpack://pdf-downloader/./src/toolkit/util/generate-url.ts","webpack://pdf-downloader/./src/toolkit/types/axios-type-guards.ts","webpack://pdf-downloader/./src/toolkit/util/axios-file-download.ts","webpack://pdf-downloader/./src/toolkit/util/nextcloud-sidebar-root.ts","webpack://pdf-downloader/./src/toolkit/util/console.ts","webpack://pdf-downloader/./src/logger.ts","webpack://pdf-downloader/./src/views/FilesTab.vue?a30a","webpack://pdf-downloader/./src/views/FilesTab.vue?0864","webpack://pdf-downloader/FilesTab.vue","webpack://pdf-downloader/./src/toolkit/util/file-node-helper.ts","webpack://pdf-downloader/./src/views/FilesTab.vue?3e00","webpack://pdf-downloader/./src/views/FilesTab.vue","webpack://pdf-downloader/./src/files-tab.ts"],"sourcesContent":["/**\n * @copyright Copyright (c) 2022-2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { appName } from '../../config.ts';\nimport {\n  generateUrl as nextcloudGenerateUrl,\n  generateOcsUrl as nextcloudGenerateOcsUrl,\n} from '@nextcloud/router';\nimport type { UrlOptions } from '@nextcloud/router';\n\n/**\n * Generate an absolute URL for this app.\n *\n * @param url The locate URL without app-prefix.\n *\n * @param urlParams Object holding url-parameters if url\n * contains parameters. \"Excess\" parameters will be appended as query\n * parameters to the URL.\n *\n * @param urlOptions Object with query parameters\n */\nexport const generateUrl = <T extends string>(url: T, urlParams?: Record<string, string|number|boolean|null>, urlOptions?: UrlOptions) => {\n  // const str = '/image/{joinTable}/{ownerId}';\n  let generated = nextcloudGenerateUrl('/apps/' + appName + '/' + url, urlParams, urlOptions);\n  const queryParams = { ...(urlParams || {}) };\n  for (const urlParam of url.matchAll(/{([^{}]*)}/g)) {\n    delete queryParams[urlParam[1]];\n  }\n  const queryArray: string[] = [];\n  for (const [key, value] of Object.entries(queryParams)) {\n    try {\n      queryArray.push(key + '=' + encodeURIComponent(value?.toString() || ''));\n    } catch (e) {\n      console.debug('STRING CONVERSION ERROR', e);\n    }\n  }\n  if (queryArray.length > 0) {\n    generated += '?' + queryArray.join('&');\n  }\n  return generated;\n};\n\nexport const generateOcsUrl = <T extends string>(url: T, urlParams?: Record<string, string|number|boolean|null>, urlOptions?: UrlOptions) => {\n  let generated = nextcloudGenerateOcsUrl('/apps/' + appName + '/' + url, urlParams, urlOptions);\n  const queryParams = { ...urlParams };\n  for (const urlParam of url.matchAll(/{([^{}]*)}/g)) {\n    delete queryParams[urlParam[1]];\n  }\n  const queryArray: string[] = [];\n  for (const [key, value] of Object.entries(queryParams)) {\n    try {\n      queryArray.push(key + '=' + encodeURIComponent(value?.toString() || ''));\n    } catch (e) {\n      console.debug('STRING CONVERSION ERROR', e);\n    }\n  }\n  if (queryArray.length > 0) {\n    generated += '?' + queryArray.join('&');\n  }\n  return generated;\n};\n\nexport default generateUrl;\n","/**\n * Orchestra member, musicion and project management application.\n *\n * CAFEVDB -- Camerata Academica Freiburg e.V. DataBase.\n *\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport axios, { AxiosError } from 'axios';\nimport type { AxiosResponse } from 'axios';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface AxiosErrorResponse<T = unknown, D = any> extends Omit<AxiosError<T, D>, 'response'> {\n  response: AxiosResponse<T, D>,\n}\n\nexport const isAxiosError = (error: unknown): error is AxiosError => axios.isAxiosError(error);\n\nexport const isAxiosErrorResponse = (error: unknown): error is AxiosErrorResponse =>\n  isAxiosError(error) && !!error.response;\n","/**\n * @copyright Copyright (c) 2022, 2023, 2024, 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport axios from '@nextcloud/axios';\nimport fileDownload from 'js-file-download';\nimport { generateUrl as generateAppUrl } from './generate-url.ts';\nimport { generateUrl, generateRemoteUrl } from '@nextcloud/router';\nimport { parse as parseContentDisposition } from 'content-disposition';\nimport type { ResponseType } from 'axios';\nimport { isAxiosErrorResponse } from '../types/axios-type-guards.ts';\n\n/**\n * Place a download request by posting to the given Ajax URL.\n *\n * @param url Relative download url, will be first fed in to\n * generateUrl().\n *\n * @param post Optional. Additional post-data. If present we send a\n   POST request to the URL with this data.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst axiosFileDownload = async (url: string, post?: Record<string, any>) => {\n\n  const downloadUrl = (url.startsWith(generateUrl(''))\n                       || url.startsWith(generateRemoteUrl('')))\n    ? url\n    : generateAppUrl(url);\n\n  const axiosOptions = { responseType: 'blob' as ResponseType };\n  try {\n    const response = post\n      ? await axios.post(downloadUrl, post, axiosOptions)\n      : await axios.get(downloadUrl, axiosOptions);\n\n    let fileName = 'download';\n\n    const contentDisposition = response.headers?.['content-disposition'];\n    if (typeof contentDisposition === 'string') {\n      const contentMeta = parseContentDisposition(contentDisposition);\n      fileName = contentMeta.parameters.filename || fileName;\n    }\n    let contentType = response.headers?.['content-type'];\n    if (typeof contentType === 'string') {\n      contentType = contentType.split(';')[0];\n    } else {\n      contentType = 'application/octetstream';\n    }\n    fileDownload(response.data, fileName, contentType);\n  } catch (error) {\n    if (isAxiosErrorResponse(error)\n        && error.response.data\n        && error.response.data instanceof Blob\n        && error.response.data.type === 'application/json') {\n      try {\n        const text = await error.response.data.text();\n        const data = JSON.parse(text);\n        error.response.data = data;\n      } catch (error2) {\n        console.error('Unable to convert JSON Blob to objecct.', { error: error2 });\n      }\n      throw error;\n    }\n  }\n};\n\nexport default axiosFileDownload;\n","/**\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Vue, { getCurrentInstance } from 'vue';\nimport { NodeStatus } from '@nextcloud/files';\nimport { emit } from '@nextcloud/event-bus';\nimport type { Node } from '@nextcloud/files';\n\nlet currentInstance: null|Vue = null;\n\ntype SidebarRoot = Vue & { node?: Node };\n\nlet sidebarRoot: null|SidebarRoot = null;\n\nconst busyNodes: Node[] = [];\n\n/**\n * Find the root of the right sidebar in order to get access to\n * interesting properties like the current Node-object.\n */\nexport const getSidebarRoot = () => {\n  let instance = getCurrentInstance()?.proxy || null;\n  if (sidebarRoot && ((instance && currentInstance === instance) || (!instance && currentInstance))) {\n    return sidebarRoot;\n  }\n  if (instance) {\n    currentInstance = instance;\n  } else {\n    instance = currentInstance;\n  }\n  while (instance && instance.$parent && instance.$options.name !== 'SidebarRoot') {\n    instance = instance?.$parent;\n  }\n  sidebarRoot = instance || null;\n  return sidebarRoot;\n};\n\nexport const getSidebarNode = () => {\n  const sidebarRoot = getSidebarRoot();\n  return sidebarRoot?.node || null;\n};\n\nexport const setSidebarNodeBusy = (state: boolean = true) => {\n  const node = getSidebarNode();\n  if (node && state) {\n    node.status = NodeStatus.LOADING;\n    emit('files:node:updated', node);\n    busyNodes.push(node);\n  } else {\n    for (const node of busyNodes) {\n      node.status = undefined;\n      emit('files:node:updated', node);\n    }\n    busyNodes.splice(0, busyNodes.length);\n  }\n};\n\nexport const clearSidebarNodeBusy = () => setSidebarNodeBusy(false);\n","/**\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport StackTrace from 'stacktrace-js';\nimport type { StackFrame } from 'stacktrace-js';\n\nexport const stackTraceOptions = {\n  sourceMapConsumerCache: {},\n  sourceCache: {},\n};\n\nconst syncStackFrames = (offset: number, depth: number) =>\n  StackTrace.getSync(stackTraceOptions).slice(offset + 1, offset + 1 + depth);\n\nconst asyncStackFrames = async (offset: number, depth: number) => {\n  const stackFrames = await StackTrace.get(stackTraceOptions);\n  return stackFrames.slice(offset + 1, offset + 1 + depth);\n};\n\ntype ConsoleMethods = 'debug'|'info'|'error'|'trace';\n\nexport interface ConsoleOptions {\n  smaps?: { debug?: boolean, info?: boolean, error?: boolean, trace?: boolean },\n  stackDepth?: number,\n}\n\nconst defaultConsoleOptions = {\n  smaps: { debug: true, info: true, error: true, trace: true },\n  stackDepth: 0,\n};\n\nclass Console {\n\n  constructor(prefix: string, options?: ConsoleOptions) {\n    this.prefix = prefix;\n    options = { ...defaultConsoleOptions, ...(options || {}) };\n    this.smaps = { ...{ debug: true, info: true, error: true, trace: true }, ...(options?.smaps || {}) };\n    this.stackDepth = options?.stackDepth || 0;\n  }\n\n  private prefix: string;\n  private smaps: { debug: boolean, info: boolean, error: boolean, trace: boolean };\n  private stackDepth: number;\n  private timestamp() {\n    return (new Date()).toLocaleTimeString('en-gb', { hour: '2-digit', minute: '2-digit', second: '2-digit', fractionalSecondDigits: 3 });\n  }\n\n  private async asyncStackFrames(depth: number) {\n    try {\n      return (await asyncStackFrames(4, depth));\n    } catch {\n      return [];\n    }\n  }\n\n  private syncStackFrames(depth: number) {\n    try {\n      return syncStackFrames(4, depth);\n    } catch {\n      return [];\n    }\n  }\n\n  private locationObject(stack: StackFrame[]) {\n    const time = this.timestamp();\n    const prefix = time + ' ' + this.prefix + (stack.length > 0 ? (' ' + stack[0].toString()) : '');\n    return stack.length > 1 ? [prefix, { stack: stack.map(entry => entry.toString()) }] : [prefix];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private emitMessage(method: ConsoleMethods, ...args: any[]) {\n    const depth = Math.max(1, (args.length > 0 && typeof args[0] === 'number') ? args.shift() : this.stackDepth);\n    if (this.smaps[method]) {\n      // eslint-disable-next-line no-console\n      this.asyncStackFrames(depth).then(stack => { console[method](...this.locationObject(stack), ...args); });\n    } else {\n      // eslint-disable-next-line no-console\n      console[method](...this.locationObject(this.syncStackFrames(depth)), ...args);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug(...args: any[]) {\n    return this.emitMessage('debug', ...args);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info(...args: any[]) {\n    return this.emitMessage('info', ...args);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error(...args: any[]) {\n    return this.emitMessage('error', ...args);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trace(...args: any[]) {\n    return this.emitMessage('trace', ...args);\n  }\n\n  enableSourceMaps(method: 'debug'|'info'|'error'|'trace', state: boolean = true) {\n    this.smaps[method] = state;\n  }\n\n  disableSourceMaps(method: 'debug'|'info'|'error'|'trace') {\n    this.enableSourceMaps(method, false);\n  }\n\n  withStack(depth: number) {\n    this.stackDepth = depth;\n  }\n\n  withoutStack() {\n    this.stackDepth = 0;\n  }\n\n}\n\nexport default Console;\n","/**\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Console from './toolkit/util/console.ts';\n\nconst logger = new Console('PDFDownloader');\n\nexport default logger;\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-6.use[1]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FilesTab.vue?vue&type=script&setup=true&lang=ts\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-6.use[1]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FilesTab.vue?vue&type=script&setup=true&lang=ts\"","import { defineComponent as _defineComponent } from 'vue'\nimport { appName } from '../config.ts'\nimport {\n  computed,\n  reactive,\n  ref,\n  set as vueSet,\n  watch,\n} from 'vue'\nimport { getRequestToken } from '@nextcloud/auth'\nimport { emit, subscribe } from '@nextcloud/event-bus'\nimport { fileInfoToNode } from '../toolkit/util/file-node-helper.ts'\nimport type { FileInfoDTO } from '../toolkit/util/file-node-helper.ts'\nimport {\n  NcActions,\n  NcActionButton,\n  NcActionCheckbox,\n} from '@nextcloud/vue'\nimport {\n  getFilePickerBuilder,\n  TOAST_PERMANENT_TIMEOUT,\n  showError,\n  showSuccess,\n} from '@nextcloud/dialogs'\nimport type {\n  IFilePickerButton,\n} from '@nextcloud/dialogs'\nimport CloudUpload from 'vue-material-design-icons/CloudUpload.vue'\nimport axios from '@nextcloud/axios'\nimport { translate as t } from '@nextcloud/l10n'\n// import path, * as Path from 'path'\nimport generateAppUrl from '../toolkit/util/generate-url.ts'\nimport getInitialState from '../toolkit/util/initial-state.ts'\nimport fileDownload from '../toolkit/util/axios-file-download.ts'\nimport FilePrefixPicker from '@rotdrop/nextcloud-vue-components/lib/components/FilePrefixPicker.vue'\nimport { basename as pathBasename } from 'path'\nimport { isAxiosErrorResponse } from '../toolkit/types/axios-type-guards.ts'\nimport IconMove from '@mdi/svg/svg/folder-move.svg?raw'\nimport IconCopy from '@mdi/svg/svg/folder-multiple.svg?raw'\nimport { setSidebarNodeBusy as setBusyState } from '../toolkit/util/nextcloud-sidebar-root.ts'\nimport logger from '../logger.ts'\nimport type { LegacyFileInfo } from '@nextcloud/files'\nimport type { InitialState } from '../types/initial-state.d.ts'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'FilesTab',\n  setup(__props, { expose }) {\n\nsetBusyState(false) // needs to be called once synchronously inside setup\n\nconst initialState = getInitialState<InitialState>()\n\nconst tooltips = reactive({\n  pageLabels: t(appName, 'Decorate each page with the original file name and the page number within that file. The default is configured in the personal preferences for the app.'),\n  offline: t(appName, 'When converting many or large files to PDF you will encounter timeouts because the request just lasts too long and the web server bails out. If this happens you can schedule offline generation of the PDF. This will not make things faster for you, but the execution time is not constrained by the web server limits. You will be notified when it is ready. If you chose to store the PDF in the cloud file system, then it will just show up there. If you chose to download to you local computer then the download will show up here (and in the notification). The download links have a configurable expiration time.'),\n  useTemplate: t(appName, 'Auto-generate the download filename from the given template. The default template can be configured in the personal settings for this app.'),\n})\n\nconst fileInfo = ref<undefined|LegacyFileInfo>(undefined)\n\nconst downloadOptions = reactive({\n  offline: undefined as undefined|boolean,\n  pageLabels: undefined as undefined|boolean,\n  useTemplate: true,\n})\n\n// currently, there is no type information on the event handlers in\n// the tempalte AND it is also not possible to use TS annotations in\n// the templates. So this stupid approach is simply in order to shut\n// off some warnings ...\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst setDownloadOption = (key: string, value: any) => {\n  downloadOptions[key] = value\n}\n\nconst cloudDestinationFileInfo = reactive({\n  dirName: '',\n  baseName: '',\n})\n\nconst showCloudDestination = ref(false)\n\nconst showBackgroundDownloads = ref(false)\n\nconst downloading = ref(false)\n\nconst activeLoaders = ref(-1)\n\nconst downloads = reactive<FileInfoDTO[]>([])\n\nconst loading = computed(() => activeLoaders.value !== 0)\n\nconst sourceFileId = computed(() => fileInfo.value?.id)\n\nconst sourcePath = computed(\n  () => fileInfo.value?.path + (fileInfo.value?.path === '/' ? '' : '/') + fileInfo.value?.name,\n)\n\nconst cloudDestinationBaseName = computed({\n  get() {\n    return cloudDestinationFileInfo.baseName\n  },\n  set(value) {\n    vueSet(cloudDestinationFileInfo, 'baseName', value)\n    return value\n  },\n})\n\nconst cloudDestinationDirName = computed({\n  get() {\n    return cloudDestinationFileInfo.dirName\n  },\n  set(value) {\n    vueSet(cloudDestinationFileInfo, 'dirName', value)\n    return value\n  },\n})\n\nconst cloudDestinationPathName = computed(\n  () => cloudDestinationDirName.value + (cloudDestinationBaseName.value ? '/' + cloudDestinationBaseName.value : ''),\n)\n\nconst downloadActions = ref<null|typeof NcActions>(null)\n\nwatch(showCloudDestination, (newValue, _oldValue) => {\n  if (newValue) {\n    downloadActions.value!.closeMenu()\n  }\n})\n\nwatch(downloads, (newValue, oldValue) => {\n  logger.info('DOWNLOADS WATCHER', { newValue, oldValue })\n  showBackgroundDownloads.value = newValue.length > 0\n})\n\n/**\n * Update current fileInfo and fetch new data\n *\n * @param newFileInfo the current file FileInfo\n */\nconst update = async (newFileInfo: LegacyFileInfo) => {\n  logger.debug('UPDATE CALLED')\n  activeLoaders.value = 1\n\n  fileInfo.value = newFileInfo\n\n  setBusyState(true)\n\n  cloudDestinationDirName.value = initialState?.pdfCloudFolderPath || fileInfo.value.path\n  if (fileInfo.value.type === 'dir') {\n    // this.folderName = fileInfo.name\n  } else {\n    // archive file, split the relevant extensions\n    // const pathInfo = Path.parse(fileInfo.name)\n    // this.folderName = Path.basename(pathInfo.name, '.tar')\n  }\n  downloadOptions.pageLabels = !!initialState?.pageLabels\n  downloadOptions.offline = !!initialState?.useBackgroundJobsDefault\n\n  fetchPdfFileNameFromTemplate(sourcePath.value)\n    .then((value) => {\n      cloudDestinationBaseName.value = value\n    })\n\n  refreshAvailableDownloads()\n\n  setBusyState(false)\n\n  --activeLoaders.value\n}\n\nconst downloadOptionsElement = ref<typeof NcActions|null>(null)\n\nconst toggleOptionsMenu = () => {\n  if (downloadOptionsElement.value!.opened) {\n    downloadOptionsElement.value!.closeMenu()\n  } else {\n    downloadOptionsElement.value!.openMenu()\n  }\n}\n\nconst toggleDownloadMenu = () => {\n  if (downloadActions.value!.opened) {\n    downloadActions.value!.closeMenu()\n  } else if (showCloudDestination.value) {\n    showCloudDestination.value = false\n  } else {\n    downloadActions.value!.openMenu()\n  }\n}\n\nconst fetchPdfFileNameFromTemplate = async (folderPath: string) => {\n  ++activeLoaders.value\n  try {\n    const response = await axios.get(generateAppUrl(\n      'sample/pdf-filename/{template}/{path}', {\n        template: encodeURIComponent(initialState?.pdfFileNameTemplate || ''),\n        path: encodeURIComponent(folderPath),\n      }))\n    --activeLoaders.value\n    return response.data.pdfFileName\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    showError(t(appName, 'Unable to obtain the pdf-file template example: {message}', {\n      message,\n    }), {\n      timeout: TOAST_PERMANENT_TIMEOUT,\n    })\n    --activeLoaders.value\n    return undefined\n  }\n}\n\nconst refreshAvailableDownloads = async () => {\n  const newDownloads = await fetchAvailableDownloads()\n  downloads.splice(0, downloads.length, ...newDownloads)\n  showBackgroundDownloads.value = downloads.length > 0\n}\n\nconst fetchAvailableDownloads = async (silent?: boolean) => {\n  if (silent !== true) {\n    ++activeLoaders.value\n  }\n  try {\n    const response = await axios.get(generateAppUrl(\n      'list/{sourcePath}', {\n        sourcePath: encodeURIComponent(sourcePath.value),\n      }))\n    logger.info('DOWNLOADS RESPONSE', response)\n    if (silent !== true) {\n      --activeLoaders.value\n    }\n    return response.data\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    showError(t(appName, 'Unable to obtain the list of available downloads: {message}', {\n      message,\n    }), {\n      timeout: TOAST_PERMANENT_TIMEOUT,\n    })\n    if (silent !== true) {\n      --activeLoaders.value\n    }\n    return []\n  }\n}\n\nconst cacheDownloadUrl = (cacheId: number) => {\n  return generateAppUrl('download/{sourcePath}/{cacheId}', {\n    sourcePath: encodeURIComponent(sourcePath.value!),\n    cacheId,\n    requesttoken: getRequestToken(),\n  })\n}\n\nconst handleCacheFileSave = async (cacheId: number) => {\n  // This cannot work with CopyMove as the promise returned is\n  // resolved with only the path-name, the information about the\n  // chosen mode of operation is not available.\n  //\n  let mode: 'Copy'|'Move'|undefined\n  const picker = getFilePickerBuilder(t(appName, 'Choose a destination'))\n    .startAt(cloudDestinationDirName.value)\n    .setMultiSelect(false)\n    .setMimeTypeFilter(['httpd/unix-directory'])\n    .allowDirectories()\n    .setButtonFactory((nodes, path) => {\n      const buttons: IFilePickerButton[] = []\n      const node: string = nodes?.[0]?.attributes?.displayName || nodes?.[0]?.basename\n      const target = node || pathBasename(path)\n\n      buttons.push({\n        callback: () => { mode = 'Copy' },\n        label: target ? t('core', 'Copy to {target}', { target }) : t('core', 'Copy'),\n        type: 'primary',\n        icon: IconCopy,\n      })\n\n      buttons.push({\n        callback: () => { mode = 'Move' },\n        label: target ? t('core', 'Move to {target}', { target }) : t('core', 'Move'),\n        type: 'secondary',\n        icon: IconMove,\n      })\n\n      return buttons\n    })\n    .build()\n  let dir: string\n  try {\n    dir = await picker.pick()\n    if (Array.isArray(dir)) {\n      dir = dir[0]\n    }\n    logger.info('PATH AND MODE', dir, mode)\n  } catch (e) {\n    return\n  }\n\n  dir = dir || '/'\n  if (dir.startsWith('//')) { // new in Nextcloud 25?\n    dir = dir.slice(1)\n  }\n  await handleSaveToCloud(cacheId, dir, mode === 'Move')\n  if (mode === 'Move') {\n    const cacheIndex = downloads.findIndex((fileInfo: FileInfoDTO) => fileInfo.fileid === cacheId)\n    if (cacheIndex >= 0) {\n      downloads.splice(cacheIndex, 1)\n    } else {\n      logger.info('DELETED DOWNLOAD ' + cacheId + ' HAS VANISHED FROM DATA?', downloads)\n      fetchAvailableDownloads().then((newDownloads) => { downloads.splice(0, downloads.length, ...newDownloads) })\n    }\n  }\n}\n\nconst handleCacheFileDownload = async (cacheId: number, baseName: string) => {\n  downloading.value = true\n  setBusyState(true)\n  try {\n    await fileDownload(cacheDownloadUrl(cacheId))\n  } catch (e) {\n    let message = ''\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    const errorMessage = message\n      ? t(appName, 'Download of {fileName} failed: {message}.', { fileName: baseName, message })\n      : t(appName, 'Download of {fileName} failed.', { fileName: baseName })\n    showError(errorMessage, { timeout: TOAST_PERMANENT_TIMEOUT })\n  }\n  downloading.value = false\n  setBusyState(false)\n}\n\nconst handleCacheFileDelete = async (cacheId: number) => {\n  downloading.value = true\n  try {\n    const response = await axios.post(generateAppUrl(\n      'clean/{sourcePath}/{cacheId}', {\n        sourcePath: encodeURIComponent(sourcePath.value),\n        cacheId,\n      },\n    ))\n    const responseData = response.data\n    if (Array.isArray(responseData.messages)) {\n      for (const message of responseData.messages) {\n        showSuccess(message)\n      }\n    }\n    const cacheIndex = downloads.findIndex((fileInfo) => fileInfo.fileid === cacheId)\n    if (cacheIndex >= 0) {\n      downloads.splice(cacheIndex, 1)\n    } else {\n      logger.info('DELETED DOWNLOAD ' + cacheId + ' HAS VANISHED?', downloads)\n      fetchAvailableDownloads().then((newDownloads) => { downloads.splice(0, downloads.length, ...newDownloads) })\n    }\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    showError(t(appName, 'Unable to delete the cached PDF file: {message}', {\n      message,\n    }), {\n      timeout: TOAST_PERMANENT_TIMEOUT,\n    })\n    fetchAvailableDownloads().then((newDownloads) => { downloads.splice(0, downloads.length, ...newDownloads) })\n  }\n  downloading.value = false\n}\n\nconst handleDownload = async () => {\n  downloadActions.value!.closeMenu()\n  showCloudDestination.value = false\n  const urlParameters = {\n    sourceFileId: sourceFileId.value!,\n    sourcePath: encodeURIComponent(sourcePath.value),\n    destinationPath: encodeURIComponent(cloudDestinationBaseName.value),\n  }\n  const queryParameters = {\n    pageLabels: !!downloadOptions.pageLabels,\n    useTemplate: downloadOptions.useTemplate,\n  }\n  downloading.value = true\n  setBusyState(true)\n  if (downloadOptions.offline) {\n    try {\n      axios.post(\n        generateAppUrl('schedule/download/{sourcePath}/{destinationPath}', urlParameters),\n        queryParameters,\n      )\n      showSuccess(t(appName, 'Background PDF generation for {sourceFile} has been scheduled.', {\n        sourceFile: sourcePath.value,\n      }))\n    } catch (e) {\n      let message = t(appName, 'reason unknown')\n      if (isAxiosErrorResponse(e) && e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (Array.isArray(responseData.messages)) {\n          message = responseData.messages.join(' ')\n        }\n      }\n      showError(t(appName, 'Unable to schedule background PDF generation for {sourceFile}: {message}', {\n        sourceFile: sourcePath.value,\n        message,\n      }), {\n        timeout: TOAST_PERMANENT_TIMEOUT,\n      })\n    }\n    downloading.value = false\n  } else {\n    const url = generateAppUrl('download/{sourcePath}', { ...urlParameters, ...queryParameters })\n    try {\n      await fileDownload(url)\n    } catch (e) {\n      let message = ''\n      if (isAxiosErrorResponse(e) && e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (Array.isArray(responseData.messages)) {\n          message = responseData.messages.join(' ')\n        }\n      }\n      const errorMessage = message\n        ? t(appName, 'Download of generated PDF failed: {message}.', { message })\n        : t(appName, 'Download of generated PDF failed.')\n      showError(errorMessage, { timeout: TOAST_PERMANENT_TIMEOUT })\n    }\n    downloading.value = false\n  }\n  setBusyState(false)\n}\n\nconst handleSaveToCloud = async (\n  cacheFileId?: number,\n  destinationFolder?: string,\n  move?: boolean,\n) => {\n  downloading.value = true\n  setBusyState(true)\n  const offline = cacheFileId === undefined && downloadOptions.offline\n  let urlTemplate = offline\n    ? 'schedule/filesystem/{sourcePath}/{destinationPath}'\n    : 'save/{sourcePath}/{destinationPath}'\n  const destinationPathName = destinationFolder || cloudDestinationPathName.value\n  const requestParameters: Record<string, string|number> = {\n    sourcePath: encodeURIComponent(sourcePath.value),\n    destinationPath: encodeURIComponent(destinationPathName),\n  }\n  if (cacheFileId) {\n    urlTemplate += '/{cacheFileId}'\n    requestParameters.cacheFileId = cacheFileId\n  }\n  logger.info('TEMPLATE', urlTemplate, requestParameters)\n  try {\n    const response = await axios.post(\n      generateAppUrl(urlTemplate, requestParameters), {\n        pageLabels: downloadOptions.pageLabels,\n        useTemplate: downloadOptions.useTemplate,\n        move,\n      },\n    )\n    if (offline) {\n      showSuccess(t(appName, 'Scheduled offline PDF generation to {path}.', { path: response.data.pdfFilePath }))\n    } else {\n      const pdfFilePath = response.data.pdfFilePath.substring('/files'.length)\n      showSuccess(t(appName, 'PDF saved as {path}.', { path: pdfFilePath }))\n\n      // Emit a birth signal over the event bus. We don't care\n      // whether the new node is located in the currently viewed\n      // directory.\n      const node = fileInfoToNode(response.data.fileInfo)\n      logger.info('NODE', node)\n\n      // Update files list\n      emit('files:node:created', node)\n    }\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    const notice = t(appName, 'Unable to save the PDF generated from {sourceFile} to the cloud: {message}', {\n      sourceFile: sourcePath.value,\n      message,\n    })\n    showError(notice, { timeout: TOAST_PERMANENT_TIMEOUT })\n    logger.error(notice, e)\n  }\n  setBusyState(false)\n  downloading.value = false\n}\n\nsubscribe('notifications:notification:received', (event) => {\n  const notification = event?.notification\n  if (notification?.app !== appName) {\n    return\n  }\n  const richParameters = notification?.subjectRichParameters\n  if (richParameters.source?.id !== sourceFileId.value) {\n    logger.info('*** PDF generation notification for other file received', sourceFileId, richParameters)\n    return\n  }\n  const destinationData = richParameters?.destination\n  if (!destinationData) {\n    return\n  }\n  if (destinationData?.status !== 'download' || !destinationData?.file) {\n    logger.info('*** PDF generation notification received, but not for for download.', destinationData)\n    return\n  }\n  if (!destinationData?.file) {\n    logger.info('*** PDF generation notification received, but carries no file information.', destinationData)\n    return\n  }\n  logger.info('*** PDF download generation event received, updating downloads list', destinationData.file)\n  const pdfFile = destinationData.file\n  const pdfFilePath = pdfFile.path // undefined for removal notification\n  const pdfFileId = pdfFile.fileid\n  const downloadsIndex = downloads.findIndex((file) => file.fileid === pdfFileId)\n  if (downloadsIndex === -1 && pdfFilePath) {\n    logger.info('*** Adding file to list of available downloads.', pdfFile)\n    downloads.push(destinationData.file)\n  } else if (downloadsIndex >= 0 && !pdfFilePath) {\n    logger.info('*** Removing file from list of available downloads.', pdfFile)\n    downloads.splice(downloadsIndex, 1)\n  }\n})\n\nexpose({\n  update,\n})\n\n\nreturn { __sfc: true,initialState, tooltips, fileInfo, downloadOptions, setDownloadOption, cloudDestinationFileInfo, showCloudDestination, showBackgroundDownloads, downloading, activeLoaders, downloads, loading, sourceFileId, sourcePath, cloudDestinationBaseName, cloudDestinationDirName, cloudDestinationPathName, downloadActions, update, downloadOptionsElement, toggleOptionsMenu, toggleDownloadMenu, fetchPdfFileNameFromTemplate, refreshAvailableDownloads, fetchAvailableDownloads, cacheDownloadUrl, handleCacheFileSave, handleCacheFileDownload, handleCacheFileDelete, handleDownload, handleSaveToCloud, appName, NcActions, NcActionButton, NcActionCheckbox, CloudUpload, t, FilePrefixPicker }\n}\n\n})","<!--\n - @author Claus-Justus Heine <himself@claus-justus-heine.de>\n - @copyright 2022, 2023, 2024, 2025 Claus-Justus Heine\n - @license AGPL-3.0-or-later\n -\n - This program is free software: you can redistribute it and/or modify\n - it under the terms of the GNU Affero General Public License as\n - published by the Free Software Foundation, either version 3 of the\n - License, or (at your option) any later version.\n -\n - This program is distributed in the hope that it will be useful,\n - but WITHOUT ANY WARRANTY; without even the implied warranty of\n - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n - GNU Affero General Public License for more details.\n -\n - You should have received a copy of the GNU Affero General Public License\n - along with this program. If not, see <http://www.gnu.org/licenses/>.\n -->\n<template>\n  <div class=\"files-tab\">\n    <ul>\n      <li class=\"files-tab-entry flex flex-center clickable\">\n        <div class=\"files-tab-entry__avatar icon-play-white\"\n             @click.prevent.stop=\"toggleDownloadMenu\"\n        />\n        <div class=\"files-tab-entry__desc\"\n             @click.prevent.stop=\"toggleDownloadMenu\"\n        >\n          <h5>\n            <span class=\"main-title\">{{ t(appName, 'Generate PDF') }}</span>\n          </h5>\n        </div>\n        <NcActions ref=\"downloadActions\">\n          <NcActionButton icon=\"icon-download\"\n                          :disabled=\"downloading\"\n                          @click.prevent.stop=\"handleDownload\"\n          >\n            {{ t(appName, 'download locally') }}\n          </NcActionButton>\n          <NcActionButton :model-value.sync=\"showCloudDestination\"\n                          :disabled=\"showCloudDestination\"\n                          @click.prevent.stop=\"showCloudDestination = !showCloudDestination\"\n          >\n            <template #icon>\n              <CloudUpload :size=\"16\"\n                           decorative\n                           title=\"\"\n              />\n            </template>\n            {{ t(appName, 'save to cloud') }}\n          </NcActionButton>\n        </NcActions>\n      </li>\n      <li v-show=\"showCloudDestination\" class=\"directory-chooser files-tab-entry\">\n        <FilePrefixPicker v-model=\"cloudDestinationFileInfo\"\n                          :hint=\"t(appName, 'Choose a destination in the cloud:')\"\n                          :placeholder=\"t(appName, 'basename')\"\n                          :readonly=\"downloadOptions.useTemplate ? 'basename' : false\"\n                          :disabled=\"downloading\"\n                          @submit=\"() => handleSaveToCloud()\"\n        />\n      </li>\n      <li class=\"files-tab-entry flex flex-center clickable\">\n        <div class=\"files-tab-entry__avatar icon-settings-white\"\n             @click=\"toggleOptionsMenu\"\n        />\n        <div class=\"files-tab-entry__desc\"\n             @click=\"toggleOptionsMenu\"\n        >\n          <h5>\n            <span class=\"main-title\">{{ t(appName, 'Options') }}</span>\n          </h5>\n        </div>\n        <NcActions ref=\"downloadOptionsElement\">\n          <NcActionCheckbox v-tooltip=\"tooltips.pageLabels\"\n                            :checked=\"!!downloadOptions.pageLabels\"\n                            @update:checked=\"setDownloadOption('pageLabels', $event)\"\n          >\n            {{ t(appName, 'page labels') }}\n          </NcActionCheckbox>\n          <NcActionCheckbox v-tooltip=\"tooltips.useTemplate\"\n                            :checked=\"!!downloadOptions.useTemplate\"\n                            @update:checked=\"setDownloadOption('useTemplate', $event)\"\n          >\n            {{ t(appName, 'filename template') }}\n          </NcActionCheckbox>\n          <NcActionCheckbox v-tooltip=\"tooltips.offline\"\n                            :checked=\"!!downloadOptions.offline\"\n                            @update:checked=\"setDownloadOption('offline', $event)\"\n          >\n            {{ t(appName, 'offline') }}\n          </NcActionCheckbox>\n        </NcActions>\n      </li>\n      <li class=\"files-tab-entry flex flex-center clickable\">\n        <div class=\"files-tab-entry__avatar icon-download-white\"\n             @click=\"showBackgroundDownloads = !showBackgroundDownloads\"\n        />\n        <div class=\"files-tab-entry__desc\"\n             @click=\"showBackgroundDownloads = !showBackgroundDownloads\"\n        >\n          <h5>{{ t(appName, 'Offline Downloads') }}</h5>\n        </div>\n        <NcActions>\n          <NcActionButton :icon=\"'icon-triangle-' + (showBackgroundDownloads ? 'n' : 's')\"\n                          @click.prevent.stop=\"showBackgroundDownloads = !showBackgroundDownloads\"\n          />\n        </NcActions>\n      </li>\n      <li v-show=\"showBackgroundDownloads\" class=\"files-tab-entry\">\n        <div v-if=\"loading\" class=\"icon-loading-small\" />\n        <div v-else-if=\"downloads.length === 0\" class=\"flex flex-center justify-center\">\n          <span class=\"label\">\n            {{ t(appName, 'No Downloads Yet') }}\n          </span>\n          <NcActions>\n            <NcActionButton icon=\"icon-play\"\n                            @click.prevent.stop=\"refreshAvailableDownloads\"\n            >\n              {{ t(appName, 'refresh') }}\n            </NcActionButton>\n          </NcActions>\n        </div>\n        <ul v-else>\n          <li v-for=\"download in downloads\" :key=\"download.fileid\" class=\"flex flex-center flex-wrap\">\n            <a :href=\"cacheDownloadUrl(download.fileid)\"\n               class=\"download external flex-grow\"\n               download\n               @click.prevent.stop=\"handleCacheFileDownload(download.fileid, download.basename)\"\n            >\n              {{ download.basename }}\n            </a>\n            <NcActions class=\"flex-no-grow flex-no-shrink\">\n              <NcActionButton @click.prevent.stop=\"handleCacheFileSave(download.fileid)\">\n                <template #icon>\n                  <CloudUpload :size=\"16\"\n                               decorative\n                               title=\"\"\n                  />\n                </template>\n                {{ t(appName, 'save to cloud') }}\n              </NcActionButton>\n              <NcActionButton icon=\"icon-download\"\n                              :disabled=\"downloading\"\n                              @click.prevent.stop=\"handleCacheFileDownload(download.fileid, download.basename)\"\n              >\n                {{ t(appName, 'download locally') }}\n              </NcActionButton>\n              <NcActionButton icon=\"icon-delete\"\n                              :disabled=\"downloading\"\n                              @click.prevent.stop=\"handleCacheFileDelete(download.fileid)\"\n              >\n                {{ t(appName, 'delete PDF file') }}\n              </NcActionButton>\n            </NcActions>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { appName } from '../config.ts'\nimport {\n  computed,\n  reactive,\n  ref,\n  set as vueSet,\n  watch,\n} from 'vue'\nimport { getRequestToken } from '@nextcloud/auth'\nimport { emit, subscribe } from '@nextcloud/event-bus'\nimport { fileInfoToNode } from '../toolkit/util/file-node-helper.ts'\nimport type { FileInfoDTO } from '../toolkit/util/file-node-helper.ts'\nimport {\n  NcActions,\n  NcActionButton,\n  NcActionCheckbox,\n} from '@nextcloud/vue'\nimport {\n  getFilePickerBuilder,\n  TOAST_PERMANENT_TIMEOUT,\n  showError,\n  showSuccess,\n} from '@nextcloud/dialogs'\nimport type {\n  IFilePickerButton,\n} from '@nextcloud/dialogs'\nimport CloudUpload from 'vue-material-design-icons/CloudUpload.vue'\nimport axios from '@nextcloud/axios'\nimport { translate as t } from '@nextcloud/l10n'\n// import path, * as Path from 'path'\nimport generateAppUrl from '../toolkit/util/generate-url.ts'\nimport getInitialState from '../toolkit/util/initial-state.ts'\nimport fileDownload from '../toolkit/util/axios-file-download.ts'\nimport FilePrefixPicker from '@rotdrop/nextcloud-vue-components/lib/components/FilePrefixPicker.vue'\nimport { basename as pathBasename } from 'path'\nimport { isAxiosErrorResponse } from '../toolkit/types/axios-type-guards.ts'\nimport IconMove from '@mdi/svg/svg/folder-move.svg?raw'\nimport IconCopy from '@mdi/svg/svg/folder-multiple.svg?raw'\nimport { setSidebarNodeBusy as setBusyState } from '../toolkit/util/nextcloud-sidebar-root.ts'\nimport logger from '../logger.ts'\nimport type { LegacyFileInfo } from '@nextcloud/files'\nimport type { InitialState } from '../types/initial-state.d.ts'\n\nsetBusyState(false) // needs to be called once synchronously inside setup\n\nconst initialState = getInitialState<InitialState>()\n\nconst tooltips = reactive({\n  pageLabels: t(appName, 'Decorate each page with the original file name and the page number within that file. The default is configured in the personal preferences for the app.'),\n  offline: t(appName, 'When converting many or large files to PDF you will encounter timeouts because the request just lasts too long and the web server bails out. If this happens you can schedule offline generation of the PDF. This will not make things faster for you, but the execution time is not constrained by the web server limits. You will be notified when it is ready. If you chose to store the PDF in the cloud file system, then it will just show up there. If you chose to download to you local computer then the download will show up here (and in the notification). The download links have a configurable expiration time.'),\n  useTemplate: t(appName, 'Auto-generate the download filename from the given template. The default template can be configured in the personal settings for this app.'),\n})\n\nconst fileInfo = ref<undefined|LegacyFileInfo>(undefined)\n\nconst downloadOptions = reactive({\n  offline: undefined as undefined|boolean,\n  pageLabels: undefined as undefined|boolean,\n  useTemplate: true,\n})\n\n// currently, there is no type information on the event handlers in\n// the tempalte AND it is also not possible to use TS annotations in\n// the templates. So this stupid approach is simply in order to shut\n// off some warnings ...\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst setDownloadOption = (key: string, value: any) => {\n  downloadOptions[key] = value\n}\n\nconst cloudDestinationFileInfo = reactive({\n  dirName: '',\n  baseName: '',\n})\n\nconst showCloudDestination = ref(false)\n\nconst showBackgroundDownloads = ref(false)\n\nconst downloading = ref(false)\n\nconst activeLoaders = ref(-1)\n\nconst downloads = reactive<FileInfoDTO[]>([])\n\nconst loading = computed(() => activeLoaders.value !== 0)\n\nconst sourceFileId = computed(() => fileInfo.value?.id)\n\nconst sourcePath = computed(\n  () => fileInfo.value?.path + (fileInfo.value?.path === '/' ? '' : '/') + fileInfo.value?.name,\n)\n\nconst cloudDestinationBaseName = computed({\n  get() {\n    return cloudDestinationFileInfo.baseName\n  },\n  set(value) {\n    vueSet(cloudDestinationFileInfo, 'baseName', value)\n    return value\n  },\n})\n\nconst cloudDestinationDirName = computed({\n  get() {\n    return cloudDestinationFileInfo.dirName\n  },\n  set(value) {\n    vueSet(cloudDestinationFileInfo, 'dirName', value)\n    return value\n  },\n})\n\nconst cloudDestinationPathName = computed(\n  () => cloudDestinationDirName.value + (cloudDestinationBaseName.value ? '/' + cloudDestinationBaseName.value : ''),\n)\n\nconst downloadActions = ref<null|typeof NcActions>(null)\n\nwatch(showCloudDestination, (newValue, _oldValue) => {\n  if (newValue) {\n    downloadActions.value!.closeMenu()\n  }\n})\n\nwatch(downloads, (newValue, oldValue) => {\n  logger.info('DOWNLOADS WATCHER', { newValue, oldValue })\n  showBackgroundDownloads.value = newValue.length > 0\n})\n\n/**\n * Update current fileInfo and fetch new data\n *\n * @param newFileInfo the current file FileInfo\n */\nconst update = async (newFileInfo: LegacyFileInfo) => {\n  logger.debug('UPDATE CALLED')\n  activeLoaders.value = 1\n\n  fileInfo.value = newFileInfo\n\n  setBusyState(true)\n\n  cloudDestinationDirName.value = initialState?.pdfCloudFolderPath || fileInfo.value.path\n  if (fileInfo.value.type === 'dir') {\n    // this.folderName = fileInfo.name\n  } else {\n    // archive file, split the relevant extensions\n    // const pathInfo = Path.parse(fileInfo.name)\n    // this.folderName = Path.basename(pathInfo.name, '.tar')\n  }\n  downloadOptions.pageLabels = !!initialState?.pageLabels\n  downloadOptions.offline = !!initialState?.useBackgroundJobsDefault\n\n  fetchPdfFileNameFromTemplate(sourcePath.value)\n    .then((value) => {\n      cloudDestinationBaseName.value = value\n    })\n\n  refreshAvailableDownloads()\n\n  setBusyState(false)\n\n  --activeLoaders.value\n}\n\nconst downloadOptionsElement = ref<typeof NcActions|null>(null)\n\nconst toggleOptionsMenu = () => {\n  if (downloadOptionsElement.value!.opened) {\n    downloadOptionsElement.value!.closeMenu()\n  } else {\n    downloadOptionsElement.value!.openMenu()\n  }\n}\n\nconst toggleDownloadMenu = () => {\n  if (downloadActions.value!.opened) {\n    downloadActions.value!.closeMenu()\n  } else if (showCloudDestination.value) {\n    showCloudDestination.value = false\n  } else {\n    downloadActions.value!.openMenu()\n  }\n}\n\nconst fetchPdfFileNameFromTemplate = async (folderPath: string) => {\n  ++activeLoaders.value\n  try {\n    const response = await axios.get(generateAppUrl(\n      'sample/pdf-filename/{template}/{path}', {\n        template: encodeURIComponent(initialState?.pdfFileNameTemplate || ''),\n        path: encodeURIComponent(folderPath),\n      }))\n    --activeLoaders.value\n    return response.data.pdfFileName\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    showError(t(appName, 'Unable to obtain the pdf-file template example: {message}', {\n      message,\n    }), {\n      timeout: TOAST_PERMANENT_TIMEOUT,\n    })\n    --activeLoaders.value\n    return undefined\n  }\n}\n\nconst refreshAvailableDownloads = async () => {\n  const newDownloads = await fetchAvailableDownloads()\n  downloads.splice(0, downloads.length, ...newDownloads)\n  showBackgroundDownloads.value = downloads.length > 0\n}\n\nconst fetchAvailableDownloads = async (silent?: boolean) => {\n  if (silent !== true) {\n    ++activeLoaders.value\n  }\n  try {\n    const response = await axios.get(generateAppUrl(\n      'list/{sourcePath}', {\n        sourcePath: encodeURIComponent(sourcePath.value),\n      }))\n    logger.info('DOWNLOADS RESPONSE', response)\n    if (silent !== true) {\n      --activeLoaders.value\n    }\n    return response.data\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    showError(t(appName, 'Unable to obtain the list of available downloads: {message}', {\n      message,\n    }), {\n      timeout: TOAST_PERMANENT_TIMEOUT,\n    })\n    if (silent !== true) {\n      --activeLoaders.value\n    }\n    return []\n  }\n}\n\nconst cacheDownloadUrl = (cacheId: number) => {\n  return generateAppUrl('download/{sourcePath}/{cacheId}', {\n    sourcePath: encodeURIComponent(sourcePath.value!),\n    cacheId,\n    requesttoken: getRequestToken(),\n  })\n}\n\nconst handleCacheFileSave = async (cacheId: number) => {\n  // This cannot work with CopyMove as the promise returned is\n  // resolved with only the path-name, the information about the\n  // chosen mode of operation is not available.\n  //\n  let mode: 'Copy'|'Move'|undefined\n  const picker = getFilePickerBuilder(t(appName, 'Choose a destination'))\n    .startAt(cloudDestinationDirName.value)\n    .setMultiSelect(false)\n    .setMimeTypeFilter(['httpd/unix-directory'])\n    .allowDirectories()\n    .setButtonFactory((nodes, path) => {\n      const buttons: IFilePickerButton[] = []\n      const node: string = nodes?.[0]?.attributes?.displayName || nodes?.[0]?.basename\n      const target = node || pathBasename(path)\n\n      buttons.push({\n        callback: () => { mode = 'Copy' },\n        label: target ? t('core', 'Copy to {target}', { target }) : t('core', 'Copy'),\n        type: 'primary',\n        icon: IconCopy,\n      })\n\n      buttons.push({\n        callback: () => { mode = 'Move' },\n        label: target ? t('core', 'Move to {target}', { target }) : t('core', 'Move'),\n        type: 'secondary',\n        icon: IconMove,\n      })\n\n      return buttons\n    })\n    .build()\n  let dir: string\n  try {\n    dir = await picker.pick()\n    if (Array.isArray(dir)) {\n      dir = dir[0]\n    }\n    logger.info('PATH AND MODE', dir, mode)\n  } catch (e) {\n    return\n  }\n\n  dir = dir || '/'\n  if (dir.startsWith('//')) { // new in Nextcloud 25?\n    dir = dir.slice(1)\n  }\n  await handleSaveToCloud(cacheId, dir, mode === 'Move')\n  if (mode === 'Move') {\n    const cacheIndex = downloads.findIndex((fileInfo: FileInfoDTO) => fileInfo.fileid === cacheId)\n    if (cacheIndex >= 0) {\n      downloads.splice(cacheIndex, 1)\n    } else {\n      logger.info('DELETED DOWNLOAD ' + cacheId + ' HAS VANISHED FROM DATA?', downloads)\n      fetchAvailableDownloads().then((newDownloads) => { downloads.splice(0, downloads.length, ...newDownloads) })\n    }\n  }\n}\n\nconst handleCacheFileDownload = async (cacheId: number, baseName: string) => {\n  downloading.value = true\n  setBusyState(true)\n  try {\n    await fileDownload(cacheDownloadUrl(cacheId))\n  } catch (e) {\n    let message = ''\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    const errorMessage = message\n      ? t(appName, 'Download of {fileName} failed: {message}.', { fileName: baseName, message })\n      : t(appName, 'Download of {fileName} failed.', { fileName: baseName })\n    showError(errorMessage, { timeout: TOAST_PERMANENT_TIMEOUT })\n  }\n  downloading.value = false\n  setBusyState(false)\n}\n\nconst handleCacheFileDelete = async (cacheId: number) => {\n  downloading.value = true\n  try {\n    const response = await axios.post(generateAppUrl(\n      'clean/{sourcePath}/{cacheId}', {\n        sourcePath: encodeURIComponent(sourcePath.value),\n        cacheId,\n      },\n    ))\n    const responseData = response.data\n    if (Array.isArray(responseData.messages)) {\n      for (const message of responseData.messages) {\n        showSuccess(message)\n      }\n    }\n    const cacheIndex = downloads.findIndex((fileInfo) => fileInfo.fileid === cacheId)\n    if (cacheIndex >= 0) {\n      downloads.splice(cacheIndex, 1)\n    } else {\n      logger.info('DELETED DOWNLOAD ' + cacheId + ' HAS VANISHED?', downloads)\n      fetchAvailableDownloads().then((newDownloads) => { downloads.splice(0, downloads.length, ...newDownloads) })\n    }\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    showError(t(appName, 'Unable to delete the cached PDF file: {message}', {\n      message,\n    }), {\n      timeout: TOAST_PERMANENT_TIMEOUT,\n    })\n    fetchAvailableDownloads().then((newDownloads) => { downloads.splice(0, downloads.length, ...newDownloads) })\n  }\n  downloading.value = false\n}\n\nconst handleDownload = async () => {\n  downloadActions.value!.closeMenu()\n  showCloudDestination.value = false\n  const urlParameters = {\n    sourceFileId: sourceFileId.value!,\n    sourcePath: encodeURIComponent(sourcePath.value),\n    destinationPath: encodeURIComponent(cloudDestinationBaseName.value),\n  }\n  const queryParameters = {\n    pageLabels: !!downloadOptions.pageLabels,\n    useTemplate: downloadOptions.useTemplate,\n  }\n  downloading.value = true\n  setBusyState(true)\n  if (downloadOptions.offline) {\n    try {\n      axios.post(\n        generateAppUrl('schedule/download/{sourcePath}/{destinationPath}', urlParameters),\n        queryParameters,\n      )\n      showSuccess(t(appName, 'Background PDF generation for {sourceFile} has been scheduled.', {\n        sourceFile: sourcePath.value,\n      }))\n    } catch (e) {\n      let message = t(appName, 'reason unknown')\n      if (isAxiosErrorResponse(e) && e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (Array.isArray(responseData.messages)) {\n          message = responseData.messages.join(' ')\n        }\n      }\n      showError(t(appName, 'Unable to schedule background PDF generation for {sourceFile}: {message}', {\n        sourceFile: sourcePath.value,\n        message,\n      }), {\n        timeout: TOAST_PERMANENT_TIMEOUT,\n      })\n    }\n    downloading.value = false\n  } else {\n    const url = generateAppUrl('download/{sourcePath}', { ...urlParameters, ...queryParameters })\n    try {\n      await fileDownload(url)\n    } catch (e) {\n      let message = ''\n      if (isAxiosErrorResponse(e) && e.response.data) {\n        const responseData = e.response.data as { messages?: string[] }\n        if (Array.isArray(responseData.messages)) {\n          message = responseData.messages.join(' ')\n        }\n      }\n      const errorMessage = message\n        ? t(appName, 'Download of generated PDF failed: {message}.', { message })\n        : t(appName, 'Download of generated PDF failed.')\n      showError(errorMessage, { timeout: TOAST_PERMANENT_TIMEOUT })\n    }\n    downloading.value = false\n  }\n  setBusyState(false)\n}\n\nconst handleSaveToCloud = async (\n  cacheFileId?: number,\n  destinationFolder?: string,\n  move?: boolean,\n) => {\n  downloading.value = true\n  setBusyState(true)\n  const offline = cacheFileId === undefined && downloadOptions.offline\n  let urlTemplate = offline\n    ? 'schedule/filesystem/{sourcePath}/{destinationPath}'\n    : 'save/{sourcePath}/{destinationPath}'\n  const destinationPathName = destinationFolder || cloudDestinationPathName.value\n  const requestParameters: Record<string, string|number> = {\n    sourcePath: encodeURIComponent(sourcePath.value),\n    destinationPath: encodeURIComponent(destinationPathName),\n  }\n  if (cacheFileId) {\n    urlTemplate += '/{cacheFileId}'\n    requestParameters.cacheFileId = cacheFileId\n  }\n  logger.info('TEMPLATE', urlTemplate, requestParameters)\n  try {\n    const response = await axios.post(\n      generateAppUrl(urlTemplate, requestParameters), {\n        pageLabels: downloadOptions.pageLabels,\n        useTemplate: downloadOptions.useTemplate,\n        move,\n      },\n    )\n    if (offline) {\n      showSuccess(t(appName, 'Scheduled offline PDF generation to {path}.', { path: response.data.pdfFilePath }))\n    } else {\n      const pdfFilePath = response.data.pdfFilePath.substring('/files'.length)\n      showSuccess(t(appName, 'PDF saved as {path}.', { path: pdfFilePath }))\n\n      // Emit a birth signal over the event bus. We don't care\n      // whether the new node is located in the currently viewed\n      // directory.\n      const node = fileInfoToNode(response.data.fileInfo)\n      logger.info('NODE', node)\n\n      // Update files list\n      emit('files:node:created', node)\n    }\n  } catch (e) {\n    let message = t(appName, 'reason unknown')\n    if (isAxiosErrorResponse(e) && e.response.data) {\n      const responseData = e.response.data as { messages?: string[] }\n      if (Array.isArray(responseData.messages)) {\n        message = responseData.messages.join(' ')\n      }\n    }\n    const notice = t(appName, 'Unable to save the PDF generated from {sourceFile} to the cloud: {message}', {\n      sourceFile: sourcePath.value,\n      message,\n    })\n    showError(notice, { timeout: TOAST_PERMANENT_TIMEOUT })\n    logger.error(notice, e)\n  }\n  setBusyState(false)\n  downloading.value = false\n}\n\nsubscribe('notifications:notification:received', (event) => {\n  const notification = event?.notification\n  if (notification?.app !== appName) {\n    return\n  }\n  const richParameters = notification?.subjectRichParameters\n  if (richParameters.source?.id !== sourceFileId.value) {\n    logger.info('*** PDF generation notification for other file received', sourceFileId, richParameters)\n    return\n  }\n  const destinationData = richParameters?.destination\n  if (!destinationData) {\n    return\n  }\n  if (destinationData?.status !== 'download' || !destinationData?.file) {\n    logger.info('*** PDF generation notification received, but not for for download.', destinationData)\n    return\n  }\n  if (!destinationData?.file) {\n    logger.info('*** PDF generation notification received, but carries no file information.', destinationData)\n    return\n  }\n  logger.info('*** PDF download generation event received, updating downloads list', destinationData.file)\n  const pdfFile = destinationData.file\n  const pdfFilePath = pdfFile.path // undefined for removal notification\n  const pdfFileId = pdfFile.fileid\n  const downloadsIndex = downloads.findIndex((file) => file.fileid === pdfFileId)\n  if (downloadsIndex === -1 && pdfFilePath) {\n    logger.info('*** Adding file to list of available downloads.', pdfFile)\n    downloads.push(destinationData.file)\n  } else if (downloadsIndex >= 0 && !pdfFilePath) {\n    logger.info('*** Removing file from list of available downloads.', pdfFile)\n    downloads.splice(downloadsIndex, 1)\n  }\n})\n\ndefineExpose({\n  update,\n})\n\n</script>\n<style lang=\"scss\" scoped>\n.files-tab {\n  .flex {\n    display:flex;\n    &.flex-center {\n      align-items:center;\n    }\n    &.flex-wrap {\n      flex-wrap:wrap;\n    }\n    &.justify-center {\n      justify-content: center;\n    }\n    &.flex-wrap {\n      flex-wrap:wrap;\n    }\n    .flex-grow {\n      flex-grow:1;\n    }\n    .flex-no-grow {\n      flex-grow:0;\n    }\n    .flex-no-shrink {\n      flex-shrink:0;\n    }\n  }\n  a.icon {\n    background-position: left;\n    padding-left:20px;\n  }\n  .files-tab-entry {\n    min-height:44px;\n    h5 {\n      margin: 0;\n    }\n    &.clickable {\n      &, & * {\n        cursor:pointer;\n      }\n    }\n    .files-tab-entry__avatar {\n      width: 32px;\n      height: 32px;\n      line-height: 32px;\n      font-size: 18px;\n      background-color: var(--color-text-maxcontrast);\n      border-radius: 50%;\n      flex-shrink: 0;\n    }\n    .files-tab-entry__desc {\n      flex: 1 1;\n      padding: 8px;\n      line-height: 1.2em;\n      min-width:0;\n      h5 {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        max-width: inherit;\n      }\n    }\n    &.directory-chooser {\n      .dirname {\n        font-weight:bold;\n        font-family:monospace;\n        .button {\n          display:block;\n        }\n      }\n      .label {\n        padding-right:0.5ex;\n      }\n    }\n  }\n}\n</style>\n","/**\n * @copyright Copyright (c) 2024, 2025, 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @author Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { join } from 'path';\nimport { File, Folder, FileType } from '@nextcloud/files';\nimport { generateRemoteUrl } from '@nextcloud/router';\n\nexport interface FileInfoDTO {\n  fileid: number,\n  path: string,\n  topLevelFolder: string,\n  relativePath: string,\n  basename: string,\n  lastmod: number,\n  mime: string,\n  size: number,\n  type: FileType,\n  hasPreview: boolean,\n  permissions: number,\n  'mount-type': string,\n  etag: string,\n}\n\n/**\n * @param fileInfo File-info object.\n *\n * @param owner If undefined the current user is used.\n *\n * @return Result.\n */\nexport const fileInfoToNode = (fileInfo: FileInfoDTO, owner?: string) => {\n  owner = owner || getCurrentUser()!.uid;\n  const userFrontEndFolder = '/' + owner + '/files';\n  if (fileInfo.topLevelFolder !== userFrontEndFolder) {\n    throw new Error(`${fileInfo.path} is located outside of the front end user file space ${userFrontEndFolder}.`);\n  }\n  const nodeData = {\n    id: fileInfo.fileid,\n    source: generateRemoteUrl(join('dav/files', owner, fileInfo.relativePath)),\n    root: `/files/${owner}`,\n    mime: fileInfo.mime,\n    mtime: new Date(fileInfo.lastmod * 1000),\n    owner,\n    size: fileInfo.size,\n    permissions: fileInfo.permissions,\n    attributes: {\n      ...fileInfo,\n      'has-preview': fileInfo.hasPreview,\n    },\n  };\n  return fileInfo.type === 'file' ? new File(nodeData) : new Folder(nodeData);\n};\n","import { render, staticRenderFns } from \"./FilesTab.vue?vue&type=template&id=fd9c4114&scoped=true\"\nimport script from \"./FilesTab.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FilesTab.vue?vue&type=script&setup=true&lang=ts\"\nimport style0 from \"./FilesTab.vue?vue&type=style&index=0&id=fd9c4114&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fd9c4114\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"files-tab\"},[_c('ul',[_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\"},[_c('div',{staticClass:\"files-tab-entry__avatar icon-play-white\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.toggleDownloadMenu.apply(null, arguments)}}}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.toggleDownloadMenu.apply(null, arguments)}}},[_c('h5',[_c('span',{staticClass:\"main-title\"},[_vm._v(_vm._s(_setup.t(_setup.appName, 'Generate PDF')))])])]),_vm._v(\" \"),_c(_setup.NcActions,{ref:\"downloadActions\"},[_c(_setup.NcActionButton,{attrs:{\"icon\":\"icon-download\",\"disabled\":_setup.downloading},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.handleDownload.apply(null, arguments)}}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'download locally'))+\"\\n        \")]),_vm._v(\" \"),_c(_setup.NcActionButton,{attrs:{\"model-value\":_setup.showCloudDestination,\"disabled\":_setup.showCloudDestination},on:{\"update:modelValue\":function($event){_setup.showCloudDestination=$event},\"update:model-value\":function($event){_setup.showCloudDestination=$event},\"click\":function($event){$event.preventDefault();$event.stopPropagation();_setup.showCloudDestination = !_setup.showCloudDestination}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c(_setup.CloudUpload,{attrs:{\"size\":16,\"decorative\":\"\",\"title\":\"\"}})]},proxy:true}])},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'save to cloud'))+\"\\n        \")])],1)],1),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.showCloudDestination),expression:\"showCloudDestination\"}],staticClass:\"directory-chooser files-tab-entry\"},[_c(_setup.FilePrefixPicker,{attrs:{\"hint\":_setup.t(_setup.appName, 'Choose a destination in the cloud:'),\"placeholder\":_setup.t(_setup.appName, 'basename'),\"readonly\":_setup.downloadOptions.useTemplate ? 'basename' : false,\"disabled\":_setup.downloading},on:{\"submit\":() => _setup.handleSaveToCloud()},model:{value:(_setup.cloudDestinationFileInfo),callback:function ($$v) {_setup.cloudDestinationFileInfo=$$v},expression:\"cloudDestinationFileInfo\"}})],1),_vm._v(\" \"),_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\"},[_c('div',{staticClass:\"files-tab-entry__avatar icon-settings-white\",on:{\"click\":_setup.toggleOptionsMenu}}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\",on:{\"click\":_setup.toggleOptionsMenu}},[_c('h5',[_c('span',{staticClass:\"main-title\"},[_vm._v(_vm._s(_setup.t(_setup.appName, 'Options')))])])]),_vm._v(\" \"),_c(_setup.NcActions,{ref:\"downloadOptionsElement\"},[_c(_setup.NcActionCheckbox,{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_setup.tooltips.pageLabels),expression:\"tooltips.pageLabels\"}],attrs:{\"checked\":!!_setup.downloadOptions.pageLabels},on:{\"update:checked\":function($event){return _setup.setDownloadOption('pageLabels', $event)}}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'page labels'))+\"\\n        \")]),_vm._v(\" \"),_c(_setup.NcActionCheckbox,{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_setup.tooltips.useTemplate),expression:\"tooltips.useTemplate\"}],attrs:{\"checked\":!!_setup.downloadOptions.useTemplate},on:{\"update:checked\":function($event){return _setup.setDownloadOption('useTemplate', $event)}}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'filename template'))+\"\\n        \")]),_vm._v(\" \"),_c(_setup.NcActionCheckbox,{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_setup.tooltips.offline),expression:\"tooltips.offline\"}],attrs:{\"checked\":!!_setup.downloadOptions.offline},on:{\"update:checked\":function($event){return _setup.setDownloadOption('offline', $event)}}},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'offline'))+\"\\n        \")])],1)],1),_vm._v(\" \"),_c('li',{staticClass:\"files-tab-entry flex flex-center clickable\"},[_c('div',{staticClass:\"files-tab-entry__avatar icon-download-white\",on:{\"click\":function($event){_setup.showBackgroundDownloads = !_setup.showBackgroundDownloads}}}),_vm._v(\" \"),_c('div',{staticClass:\"files-tab-entry__desc\",on:{\"click\":function($event){_setup.showBackgroundDownloads = !_setup.showBackgroundDownloads}}},[_c('h5',[_vm._v(_vm._s(_setup.t(_setup.appName, 'Offline Downloads')))])]),_vm._v(\" \"),_c(_setup.NcActions,[_c(_setup.NcActionButton,{attrs:{\"icon\":'icon-triangle-' + (_setup.showBackgroundDownloads ? 'n' : 's')},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();_setup.showBackgroundDownloads = !_setup.showBackgroundDownloads}}})],1)],1),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.showBackgroundDownloads),expression:\"showBackgroundDownloads\"}],staticClass:\"files-tab-entry\"},[(_setup.loading)?_c('div',{staticClass:\"icon-loading-small\"}):(_setup.downloads.length === 0)?_c('div',{staticClass:\"flex flex-center justify-center\"},[_c('span',{staticClass:\"label\"},[_vm._v(\"\\n          \"+_vm._s(_setup.t(_setup.appName, 'No Downloads Yet'))+\"\\n        \")]),_vm._v(\" \"),_c(_setup.NcActions,[_c(_setup.NcActionButton,{attrs:{\"icon\":\"icon-play\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.refreshAvailableDownloads.apply(null, arguments)}}},[_vm._v(\"\\n            \"+_vm._s(_setup.t(_setup.appName, 'refresh'))+\"\\n          \")])],1)],1):_c('ul',_vm._l((_setup.downloads),function(download){return _c('li',{key:download.fileid,staticClass:\"flex flex-center flex-wrap\"},[_c('a',{staticClass:\"download external flex-grow\",attrs:{\"href\":_setup.cacheDownloadUrl(download.fileid),\"download\":\"\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.handleCacheFileDownload(download.fileid, download.basename)}}},[_vm._v(\"\\n            \"+_vm._s(download.basename)+\"\\n          \")]),_vm._v(\" \"),_c(_setup.NcActions,{staticClass:\"flex-no-grow flex-no-shrink\"},[_c(_setup.NcActionButton,{on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.handleCacheFileSave(download.fileid)}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c(_setup.CloudUpload,{attrs:{\"size\":16,\"decorative\":\"\",\"title\":\"\"}})]},proxy:true}],null,true)},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'save to cloud'))+\"\\n            \")]),_vm._v(\" \"),_c(_setup.NcActionButton,{attrs:{\"icon\":\"icon-download\",\"disabled\":_setup.downloading},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.handleCacheFileDownload(download.fileid, download.basename)}}},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'download locally'))+\"\\n            \")]),_vm._v(\" \"),_c(_setup.NcActionButton,{attrs:{\"icon\":\"icon-delete\",\"disabled\":_setup.downloading},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _setup.handleCacheFileDelete(download.fileid)}}},[_vm._v(\"\\n              \"+_vm._s(_setup.t(_setup.appName, 'delete PDF file'))+\"\\n            \")])],1)],1)}),0)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @author Claus-Justus Heine\n * @copyright 2025 Claus-Justus Heine <himself@claus-justus-heine.de>\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { appName } from './config.ts';\nimport Vue from 'vue';\n// import { createPinia, PiniaVuePlugin } from 'pinia';\nimport { Tooltip } from '@nextcloud/vue';\nimport FilesTab from './views/FilesTab.vue';\nimport type { LegacyFileInfo } from '@nextcloud/files';\nimport { translate as t, translatePlural as n } from '@nextcloud/l10n';\n\ninterface FilesTabVue extends Vue {\n  update(fileInfo: LegacyFileInfo): Promise<unknown>,\n}\n\nVue.mixin({ data() { return { appName }; }, methods: { t, n } });\nVue.directive('tooltip', Tooltip);\n// Vue.use(PiniaVuePlugin);\n\nconst FilesTabVue = Vue.extend(FilesTab);\n// const pinia = createPinia();\n\nconst createTabInstance = (parent: Vue):FilesTabVue => new FilesTabVue({ parent/* , pinia */ });\n\nexport default createTabInstance;\n"],"names":["generateUrl","url","urlParams","urlOptions","generated","nextcloudGenerateUrl","appName","queryParams","urlParam","matchAll","queryArray","key","value","Object","entries","push","encodeURIComponent","toString","e","console","debug","length","join","isAxiosErrorResponse","error","axios","isAxiosError","response","async","post","downloadUrl","startsWith","generateRemoteUrl","generateAppUrl","axiosOptions","responseType","get","fileName","contentDisposition","headers","parseContentDisposition","parameters","filename","contentType","split","fileDownload","data","Blob","type","text","JSON","parse","error2","currentInstance","sidebarRoot","busyNodes","getSidebarRoot","instance","getCurrentInstance","proxy","$parent","$options","name","setSidebarNodeBusy","state","arguments","undefined","node","getSidebarNode","status","NodeStatus","LOADING","emit","splice","stackTraceOptions","sourceMapConsumerCache","sourceCache","defaultConsoleOptions","smaps","info","trace","stackDepth","constructor","prefix","options","_defineProperty","this","timestamp","Date","toLocaleTimeString","hour","minute","second","fractionalSecondDigits","asyncStackFrames","depth","offset","StackTrace","slice","syncStackFrames","locationObject","stack","map","entry","emitMessage","method","_len","args","Array","_key","Math","max","shift","then","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","enableSourceMaps","disableSourceMaps","withStack","withoutStack","_defineComponent","__name","setup","__props","_ref","expose","setBusyState","initialState","getInitialState","tooltips","reactive","pageLabels","t","offline","useTemplate","fileInfo","ref","downloadOptions","cloudDestinationFileInfo","dirName","baseName","showCloudDestination","showBackgroundDownloads","downloading","activeLoaders","downloads","loading","computed","sourceFileId","id","sourcePath","path","cloudDestinationBaseName","set","vueSet","cloudDestinationDirName","cloudDestinationPathName","downloadActions","watch","newValue","_oldValue","closeMenu","oldValue","logger","update","newFileInfo","pdfCloudFolderPath","useBackgroundJobsDefault","fetchPdfFileNameFromTemplate","refreshAvailableDownloads","downloadOptionsElement","template","pdfFileNameTemplate","folderPath","pdfFileName","message","responseData","isArray","messages","showError","timeout","TOAST_PERMANENT_TIMEOUT","newDownloads","fetchAvailableDownloads","silent","cacheDownloadUrl","cacheId","requesttoken","getRequestToken","handleSaveToCloud","cacheFileId","destinationFolder","move","urlTemplate","destinationPathName","requestParameters","destinationPath","showSuccess","pdfFilePath","substring","fileInfoToNode","owner","userFrontEndFolder","getCurrentUser","uid","topLevelFolder","Error","nodeData","fileid","source","relativePath","root","mime","mtime","lastmod","size","permissions","attributes","hasPreview","File","Folder","notice","sourceFile","subscribe","event","notification","app","richParameters","subjectRichParameters","destinationData","destination","file","pdfFile","pdfFileId","downloadsIndex","findIndex","__sfc","setDownloadOption","toggleOptionsMenu","opened","openMenu","toggleDownloadMenu","handleCacheFileSave","mode","picker","getFilePickerBuilder","startAt","setMultiSelect","setMimeTypeFilter","allowDirectories","setButtonFactory","nodes","buttons","target","displayName","basename","pathBasename","callback","label","icon","IconCopy","IconMove","build","dir","pick","cacheIndex","handleCacheFileDownload","errorMessage","handleCacheFileDelete","handleDownload","urlParameters","queryParameters","NcActions","NcActionButton","NcActionCheckbox","CloudUpload","FilePrefixPicker","_vm","_c","_self","_setup","_setupProxy","staticClass","on","$event","preventDefault","stopPropagation","apply","_v","_s","attrs","scopedSlots","_u","fn","directives","rawName","expression","submit","model","$$v","_l","download","Vue","mixin","methods","n","directive","Tooltip","FilesTabVue","extend","FilesTab","parent"],"sourceRoot":""}